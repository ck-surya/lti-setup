services:
  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=chhotu22@navgurukul.org"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard (optional)
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - lti-net

  mongodb:
    image: mongo:6.0
    container_name: lti-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASS}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    ports:
      - "27017:27017"
    volumes:
      - lti-mongo-data:/data/db
    networks:
      - lti-net

  lti-node:
    build: .
    container_name: lti-node
    restart: unless-stopped
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lti.rule=Host(`lti.csbasics.in`)"
      - "traefik.http.routers.lti.entrypoints=websecure"
      - "traefik.http.routers.lti.tls.certresolver=letsencrypt"
      - "traefik.http.services.lti.loadbalancer.server.port=3000"
    depends_on:
      - mongodb
    networks:
      - lti-net

volumes:
  lti-mongo-data:

networks:
  lti-net:
